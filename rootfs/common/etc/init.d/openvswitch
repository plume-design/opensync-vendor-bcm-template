#!/bin/sh
# {# jinja-parse #}
INSTALL_PREFIX={{INSTALL_PREFIX}}

# Use the default PID file
OVSDB_SERVER_PID="/var/run/openvswitch/ovsdb-server.pid"

OVSDB_ORIG=${INSTALL_PREFIX}/etc/conf.db.bck
OVSDB_ORIG_Z=$OVSDB_ORIG.z
OVSDB_WORK_DIR=/tmp/etc/openvswitch
OVSDB_WORK_COPY=$OVSDB_WORK_DIR/conf.db
OVSDB_WORK_COPY_GZ=$OVSDB_WORK_COPY.gz
OVSDB_RUN_DIR=/var/run/openvswitch

insmods()
{
    # insert ovs kernel modules
    modprobe nf_nat_ipv4
    modprobe nf_nat_ipv6
    insmod /opt/modules/openvswitch/openvswitch.ko
}

start()
{
    logger "$0: Starting openvswitch ..."

    [ -x "$OVSDB_RUN_DIR" ] || mkdir -p "$OVSDB_RUN_DIR"

    # create a ramdisk folder for non-persistent OVSDB database
    [ -x "$OVSDB_WORK_DIR" ] || mkdir -p "$OVSDB_WORK_DIR"

    # insert all kernel modules if needed
    [ "$(lsmod | grep -c 'openvswitch')" -ne 0 ] || insmods

    if [ -e "$OVSDB_ORIG_Z" ];
    then
        # decompress the compressed OVSDB file
        ${INSTALL_PREFIX}/bin/ovsdb-inflate < "$OVSDB_ORIG_Z" > "$OVSDB_WORK_COPY_GZ"
        gzip -dc "$OVSDB_WORK_COPY_GZ" > "$OVSDB_WORK_COPY"
        rm -f "$OVSDB_WORK_COPY_GZ"
    else
        # copy the pre-populated db conf.db to ramdisk
        cp "$OVSDB_ORIG" "$OVSDB_WORK_COPY"
    fi

    # ovsdb-server start against non-persistent DB
    start-stop-daemon -S -b -x /bin/ovsdb-server -- \
        --remote=punix:/var/run/db.sock \
        --remote=db:Open_vSwitch,Open_vSwitch,manager_options \
        --private-key=db:Open_vSwitch,SSL,private_key \
        --certificate=db:Open_vSwitch,SSL,certificate \
        --ca-cert=db:Open_vSwitch,SSL,ca_cert \
        --pidfile="$OVSDB_SERVER_PID" \
        "$OVSDB_WORK_COPY"

    ln -sf /var/run/db.sock $OVSDB_RUN_DIR/db.sock
}


stop()
{
    logger "$0: Stopping openvswitch ..."

    start-stop-daemon -K -p "${OVSDB_SERVER_PID}"

    rm -rf $OVSDB_RUN_DIR/db.sock
}


case "$1" in
    start)
        start
        exit 0
        ;;

    stop)
        stop
        exit 0
        ;;

    restart)
        stop
        start
        exit 0
        ;;
    *)
        logger "$0: unrecognized option $1"
        exit 1
        ;;
esac
